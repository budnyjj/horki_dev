<?php
/**
 * @file
 *   Hooks definitions for the JStats module.
 */

/**
 * Implements hook_init.
 */
function jstats_init() {
  $params = array('path' => $_GET['q']);
  if (arg(0) == 'node' && is_numeric(arg(1)) && arg(2) == '') {
    $params['nid'] = arg(1);
  }
  $json = drupal_json_encode($params);

  $js = <<<EOJ
jQuery.post(Drupal.settings.basePath + 'jstats.php', $json);
EOJ;
  $options = array('type' => 'inline', 'scope' => 'footer');
  drupal_add_js($js, $options);
}

/**
 * Implementation of hook_menu().
 */
function jstats_menu() {
  // Make it possible to use jstats.php even if the file wasn't placed at
  // the webroot. This is pretty much a compatibility layer for partial
  // installation, at it means Drupal will do a full bootstrap.
  $items['jstats.php'] = array(
    'page callback' => 'jstats_callback',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'file' => 'jstats.inc'
  );
  return $items;
}

/**
 * Implementation of hook_cron().
 */
function jstats_cron() {
  // Calculate our stats
  jstats_aggregate();

  // Flush old log entries
  db_delete('jstats_accesslog')->execute();
}

/**
 * Aggregates access statistics.
 */
function jstats_aggregate() {
  // Start a transaction
  $transaction = db_transaction();

  try {
    // Define the subquery
    $query = db_select('jstats_accesslog', 'ja')
      ->condition('nid', 0, '>')
      ->groupBy('nid');
    $query->addField('ja', 'nid');
    $query->addExpression('COUNT(aid)', 'recentcount');

    $result = $query->execute();

    foreach($result as $record) {
    		    
      // Insert or update the result of the subquery into our stat table
      db_merge('jstats_node')
	->key(array(
	  'nid' => $record->nid,
 	))
	->fields(array(
	  'nid' => $record->nid,
	  'recentcount' => $record->recentcount,
	))
	->expression('recentcount', 'recentcount + :recentcnt',
	  array(':recentcnt' => $record->recentcount))	     
	->execute();
    }     
  }
  catch (Exception $e) {
    $transaction->rollback();
    watchdog('jStats', $e);
    throw $e;
  }
}

/**
 * Implementation of hook_views_data().
 */
function jstats_views_data() {
  $data = array();
  $data['jstats_node'] = array(
    'table' => array(
      'group' => t('Node statistics'),
      'join' => array(
        'node' => array(
          'field' => 'nid',
          'left_field' => 'nid'
        )
      )
    ),
    'recentcount' => array(
      'title' => t('Recent count'),
      'help' => t('Number of time this node has been viewed'),
      'field' => array(
        'handler' => 'views_handler_field_numeric',
        'click sortable' => TRUE,
      ),
      'filter' => array(
        'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort'
      )
    )
  );

  return $data;
}

